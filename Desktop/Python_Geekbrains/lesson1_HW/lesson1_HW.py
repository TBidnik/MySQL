""""
Задание №1.
Поработайте с переменными, создайте несколько, выведите на экран, запросите у пользователя несколько чисел
и строк и сохраните в переменные, выведите на экран.
"""

name = input('Как вас зовут:')
age = int(input('Сколько ввам лет:'))
print('Здравстуйте {}, {} лет отроду'.format(name, age))

""""
Задание №2.
Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды 
и выведите в формате чч:мм:сс. Используйте форматирование строк.
"""
time = int(input('Введите количесиво секунд: '))
hours = time // 3600
minutes = (time % 3600) // 60
seconds = (time - (hours * 3600) - (minutes * 60))

if hours < 10:
    hours = str(f'0{hours}')
    if minutes < 10:
        minutes = str(f'0{minutes}')
        if seconds < 10:
            seconds = str(f'0{seconds}')

print(str(f'Точное время: {hours}:{minutes}:{seconds}'))

""""
3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. 
Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
"""

num = int(input('Введите число: '))
count = 1
s = 0

if num == 1 or num == 0:
    print(num)

while count <= num:
    s += int(str(num) * count)
    count += 1
    print(s)
print(f'Общая сумма данного числа: {s}')

""""
Задание №4. 
Пользователь вводит целое положительное число. 
Найдите самую большую цифру в числе. Для решения используйте цикл while и арифметические операции.
"""

number = int(input('Введите число: '))

# Быстрое решение (но это пока не проходили)
# a = list(str(number))
# print((f'Самое большое введенное число: {max(a)}'))

a = number // 10
b = number % 10
c = a % 10
count = 0

while a > 9:
    a //= 10
    c = a % 10
    if c < b:
        continue
    else:
        b = c
        c = a % 10
    count += 1
if a > b:
    print(f'Самое большое число в веденном значении: {a}')
elif a == b:
    print(f'Самое большое число в веденном значении: {a}')
else:
    print(f'Самое большое число в веденном значении: {b}')


""""
Задание №5.
Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает фирма
(прибыль — выручка больше издержек, или убыток — издержки больше выручки). Выведите соответствующее сообщение. 
Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке). 
Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.
"""


v = int(input('Введите выручку фирмы: '))
z = int(input('Введите затраты фирмы: '))

if z > v:
    print(f'Фирма отработала в убыток = {v - z} рублей. Сожалею.')
if v == z:
    print('Фирма отработала в "0". Никакой прибыли, но и нет потерь...')
if z < v:
    print(f'О! Поздравляю! Ваши Фирма отработала в прибыль = {v - z} рублей. \n'
          f'Рентабельность вашей фирмы составляет: {(v - z) / v * 100}% \n')
    k = int(input('Введите количество сотрудников ввашей организации:'))
    print(f'Итак, прибыль фирмы на каждого сотрудника вашей фирмы \n'
          f'Составляет: {(v - z) / k :.2f} рублей')

""""
Задание №6. 
Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего. 
Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров. 
Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
Например: a = 2, b = 3.
Результат:
1-й день: 2
2-й день: 2,2
3-й день: 2,42
4-й день: 2,66
5-й день: 2,93
6-й день: 3,22

Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.
"""

a = int(input('Сколько пробежал спортсмен в первый день?: '))
b = int(input('Какого результата мы ожидаем от спортсмена?: '))
count = 0
day = 1
while a < b:
    print(f'{day}-й день: {a :.2f} км')
    a += (a * 0.1)
    count += 1
    day += 1

print(f'{day}-й день: {a :.2f} км')
if a * 10 % 10 > 5:
    print(f'Ответ: на {day}-й день спортсмен достиг результата не менее {a - 1 :.0f} км.')
if a * 10 % 10 < 5:
    print(f'Ответ: на {day}-й день спортсмен достиг результата не менее {a :.0f} км.')






